services:
  # ========== 原有服务 ==========
  
  # ClickHouse 数据库
  clickhouse:
    image: clickhouse/clickhouse-server:24.3-alpine
    container_name: nginx-analytics-clickhouse
    restart: unless-stopped
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: nginx_analytics
      CLICKHOUSE_USER: analytics_user
      CLICKHOUSE_PASSWORD: analytics_password_change_in_prod
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    user: "101:101"
    networks:
      - nginx-analytics
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana 数据可视化
  grafana:
    image: grafana/grafana:latest
    container_name: nginx-analytics-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: vertamedia-clickhouse-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - nginx-analytics
    depends_on:
      - clickhouse

  # Redis for Superset
  redis:
    image: redis:7-alpine
    container_name: nginx-analytics-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - nginx-analytics
    command: redis-server --appendonly yes --requirepass redis_password

  # PostgreSQL for Superset metadata
  postgres:
    image: postgres:13
    container_name: nginx-analytics-postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: superset
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nginx-analytics
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset -d superset"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Superset
  superset:
    image: apache/superset:latest
    container_name: nginx-analytics-superset
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=nginx_analytics_secret_key_change_in_production
      - DATABASE_HOST=postgres
      - DATABASE_DB=superset
      - DATABASE_USER=superset
      - DATABASE_PASSWORD=superset_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
    volumes:
      - superset_data:/app/superset_home
    networks:
      - nginx-analytics
    depends_on:
      - postgres
      - redis
      - clickhouse

  # ========== 新增DataEase BI工具 ==========
  
  # DataEase MySQL数据库
  dataease-mysql:
    image: registry.cn-qingdao.aliyuncs.com/dataease/mysql:8.3.0
    container_name: nginx-analytics-dataease-mysql
    restart: unless-stopped
    ports:
      - "3310:3306"
    environment:
      MYSQL_ROOT_PASSWORD: DataEase@2024
      MYSQL_DATABASE: dataease
    volumes:
      - dataease_mysql_data:/var/lib/mysql
      - ./services/dataease/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - nginx-analytics
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # DataEase BI平台
  dataease:
    #image: registry.cn-qingdao.aliyuncs.com/dataease/dataease:v2.10.10
    image: registry.cn-qingdao.aliyuncs.com/dataease/dataease:v2.5.0
    container_name: nginx-analytics-dataease
    restart: unless-stopped
    ports:
      - "8881:8100"
    volumes:
      - ./services/dataease/config:/opt/apps/config
      - dataease_logs:/opt/dataease2.0/logs
      - dataease_static:/opt/dataease2.0/data/static-resource
      - dataease_cache:/opt/dataease2.0/cache
      - dataease_geo:/opt/dataease2.0/data/geo
      - dataease_data:/opt/dataease/data
    env_file:
      - ./services/dataease/config/install.conf
    networks:
      - nginx-analytics
    depends_on:
      dataease-mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ss -tuln | grep :8100 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # ========== 夜莺监控栈 ==========
  
  # MySQL for 夜莺元数据存储 + DataEase
  n9e-mysql:
    image: mysql:8
    container_name: n9e-mysql
    hostname: n9e-mysql
    restart: unless-stopped
    ports:
      - "3308:3306"
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: n9e_mysql_password
      MYSQL_DATABASE: n9e_v6
    volumes:
      - n9e_mysql_data:/var/lib/mysql
      - ./services/n9e/init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - nginx-analytics
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # VictoriaMetrics 时序数据库
  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.93.15
    container_name: nginx-analytics-victoriametrics
    hostname: victoriametrics
    restart: unless-stopped
    ports:
      - "8428:8428"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - victoriametrics_data:/victoria-metrics-data
    networks:
      - nginx-analytics
    command:
      - "--storageDataPath=/victoria-metrics-data"
      - "--loggerTimezone=Asia/Shanghai"
      - "--retentionPeriod=1y"

  # 夜莺核心服务
  nightingale:
    image: flashcatcloud/nightingale:latest
    container_name: nginx-analytics-nightingale
    hostname: nightingale
    restart: unless-stopped
    ports:
      - "17000:17000"
      - "20090:20090"
    environment:
      GIN_MODE: release
      TZ: Asia/Shanghai
      WAIT_HOSTS: n9e-mysql:3306, redis:6379, victoriametrics:8428
    volumes:
      - ./services/n9e/config/nightingale:/app/etc
      - n9e_data:/app/data
    networks:
      - nginx-analytics
    depends_on:
      - n9e-mysql
      - redis
      - victoriametrics
    command: >
      sh -c "
        sleep 30 &&
        /app/n9e
      "

  # Categraf 数据采集器
  categraf:
    image: flashcatcloud/categraf:latest
    container_name: nginx-analytics-categraf
    hostname: categraf
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
      HOST_PROC: /hostfs/proc
      HOST_SYS: /hostfs/sys
      HOST_MOUNT_PREFIX: /hostfs
      WAIT_HOSTS: nightingale:17000
    volumes:
      - ./services/n9e/config/categraf:/etc/categraf/conf
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
    networks:
      - nginx-analytics
    depends_on:
      - nightingale
    privileged: true

  # ========== 可选: Prometheus Node Exporter ==========
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: nginx-analytics-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - nginx-analytics

networks:
  nginx-analytics:
    driver: bridge
    name: nginx-analytics

volumes:
  # 原有数据卷
  postgres_data:
  clickhouse_data:
  clickhouse_logs:
  grafana_data:
  redis_data:
  superset_data:
  
  # DataEase相关数据卷
  dataease_mysql_data:
  dataease_data:
  dataease_logs:
  dataease_static:
  dataease_cache:
  dataease_geo:
  
  # 夜莺相关数据卷
  n9e_mysql_data:
  victoriametrics_data:
  n9e_data:
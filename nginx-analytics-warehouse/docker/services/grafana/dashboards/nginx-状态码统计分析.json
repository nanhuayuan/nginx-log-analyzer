{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Nginx - self_04_status_analyzer.py - HTTPÁä∂ÊÄÅÁ†ÅÂàÜÊûêÂíåÁªüËÆ°",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "‚ùå ÈîôËØØÁä∂ÊÄÅÁ†ÅÊ∑±Â∫¶ÂàÜÊûê",
      "tooltip": "Êü•ÁúãÈîôËØØÁä∂ÊÄÅÁ†ÅÊ∑±Â∫¶ÂàÜÊûê",
      "type": "link",
      "url": "/d/nginx_status_code_analysis?${__url_time_range}&var-business_unit=${business_unit}&var-environment=${environment}"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "üîç Êé•Âè£ÈîôËØØÂàÜÊûê",
      "tooltip": "Êü•ÁúãÊé•Âè£ÈîôËØØËØ¶ÁªÜÂàÜÊûê",
      "type": "link",
      "url": "/d/nginx-interface-error-analysis?${__url_time_range}&var-business_unit=${business_unit}&var-environment=${environment}"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "üîô ËøîÂõûL2‰∏ìÈ°πÂàÜÊûê",
      "tooltip": "ËøîÂõûL2‰∏ìÈ°πÂàÜÊûêÂ§ßÂ±è",
      "type": "link",
      "url": "/d/l2-specialized-analysis?${__url_time_range}&var-business_unit=${business_unit}&var-environment=${environment}"
    }
  ],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "panels": [],
      "title": "Áä∂ÊÄÅÁ†ÅÂàÜÊûêÊ¶ÇËßà",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "yellow",
                "value": 95
              },
              {
                "color": "green",
                "value": 99
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                (countIf(response_status_code IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) as value\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY time\n                            ORDER BY time"
        }
      ],
      "title": "ÊàêÂäüÁéá (Success Rate)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 2
              },
              {
                "color": "red",
                "value": 10
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 6,
        "y": 1
      },
      "id": 3,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                (countIf(response_status_code >= '400' AND response_status_code < '500') * 100.0 / count()) as value\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY time\n                            ORDER BY time"
        }
      ],
      "title": "ÂÆ¢Êà∑Á´ØÈîôËØØÁéá (4XX)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 1
              },
              {
                "color": "red",
                "value": 5
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 1
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                (countIf(response_status_code >= '500') * 100.0 / count()) as value\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY time\n                            ORDER BY time"
        }
      ],
      "title": "ÊúçÂä°Âô®ÈîôËØØÁéá (5XX)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 1000
              },
              {
                "color": "red",
                "value": 10000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 1
      },
      "id": 5,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) as value\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY time\n                            ORDER BY time"
        }
      ],
      "title": "ÊÄªÈîôËØØÊï∞Èáè",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 6,
      "panels": [],
      "title": "Áä∂ÊÄÅÁ†ÅË∂ãÂäøÂàÜÊûê",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "2XX"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "3XX"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "4XX"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "5XX"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                    toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                    countIf(response_status_code >= '200' AND response_status_code < '300') / $__interval_s as status_2xx,\n                                    countIf(response_status_code >= '300' AND response_status_code < '400') / $__interval_s as status_3xx,\n                                    countIf(response_status_code >= '400' AND response_status_code < '500') / $__interval_s as status_4xx,\n                                    countIf(response_status_code >= '500') / $__interval_s as status_5xx\n                                FROM nginx_analytics.dwd_nginx_enriched_v3\n                                WHERE $__timeFilter(log_time)\n                                    AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                    AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                    AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                                GROUP BY time\n                                ORDER BY time"
        }
      ],
      "title": "HTTPÁä∂ÊÄÅÁ†ÅË∂ãÂäø",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": ""
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": ""
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                    toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                    (countIf(response_status_code IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) as success_rate,\n                                    (countIf(response_status_code >= '400' AND response_status_code < '500') * 100.0 / count()) as error_4xx_rate,\n                                    (countIf(response_status_code >= '500') * 100.0 / count()) as error_5xx_rate\n                                FROM nginx_analytics.dwd_nginx_enriched_v3\n                                WHERE $__timeFilter(log_time)\n                                    AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                    AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                    AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                                GROUP BY time\n                                ORDER BY time"
        }
      ],
      "title": "ÈîôËØØÁéáË∂ãÂäø",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 9,
      "panels": [],
      "title": "ËØ¶ÁªÜÁä∂ÊÄÅÁ†ÅÂàÜÊûê",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "status_code"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Áä∂ÊÄÅÁ†Å"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Êü•ÁúãËØ•Áä∂ÊÄÅÁ†ÅËØ¶ÁªÜÂàÜÊûê",
                    "url": "/d/nginx_status_code_analysis?var-status_code=${__value.raw}&var-business_unit=${business_unit}&var-environment=${environment}&${__url_time_range}",
                    "targetBlank": true
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "request_count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ËØ∑Ê±ÇÊï∞Èáè"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "percentage"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Âç†ÊØî(%)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_response_time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Âπ≥ÂùáÂìçÂ∫îÊó∂Èó¥(ms)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "status_type"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Á±ªÂûã"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 0,
        "y": 20
      },
      "id": 10,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": ""
          }
        ]
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "table",
          "refId": "A",
          "rawSql": "SELECT\n                                response_status_code as status_code,\n                                count() as request_count,\n                                (count() * 100.0 / (SELECT count() FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE $__timeFilter(log_time) AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit) AND $__conditionalAll(environment IN (${environment:singlequote}), $environment) AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code))) as percentage,\n                                avg(total_request_duration) as avg_response_time,\n                                CASE\n                                    WHEN response_status_code >= '200' AND response_status_code < '300' THEN 'Success'\n                                    WHEN response_status_code >= '300' AND response_status_code < '400' THEN 'Redirect'\n                                    WHEN response_status_code >= '400' AND response_status_code < '500' THEN 'Client Error'\n                                    WHEN response_status_code >= '500' THEN 'Server Error'\n                                    ELSE 'Unknown'\n                                END as status_type\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY response_status_code\n                            ORDER BY request_count DESC\n                            LIMIT 20"
        }
      ],
      "title": "ËØ¶ÁªÜHTTPÁä∂ÊÄÅÁ†ÅÁªüËÆ°",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 8,
        "y": 20
      },
      "id": 11,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "value",
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "table",
          "refId": "A",
          "rawSql": "SELECT\n                                CASE\n                                    WHEN response_status_code >= '200' AND response_status_code < '300' THEN '2XX Success'\n                                    WHEN response_status_code >= '300' AND response_status_code < '400' THEN '3XX Redirect'\n                                    WHEN response_status_code >= '400' AND response_status_code < '500' THEN '4XX Client Error'\n                                    WHEN response_status_code >= '500' THEN '5XX Server Error'\n                                    ELSE 'Other'\n                                END as status_category,\n                                count() as request_count\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY status_category\n                            ORDER BY request_count DESC"
        }
      ],
      "title": "Áä∂ÊÄÅÁ†ÅÂàÜÂ∏ÉÈ•ºÂõæ",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "platform"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Âπ≥Âè∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_requests"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÊÄªËØ∑Ê±ÇÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_rate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÁéá(%)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_response_time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Âπ≥ÂùáÂìçÂ∫îÊó∂Èó¥(ms)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "unique_ips"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Áã¨Á´ãIPÊï∞"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 16,
        "y": 20
      },
      "id": 12,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": ""
          }
        ]
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "table",
          "refId": "A",
          "rawSql": "SELECT\n                                platform,\n                                count() as total_requests,\n                                countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) as error_count,\n                                (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) as error_rate,\n                                avg(total_request_duration) as avg_response_time,\n                                uniq(client_ip) as unique_ips\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time) AND length(platform) > 0\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY platform\n                            ORDER BY error_rate DESC"
        }
      ],
      "title": "Âπ≥Âè∞ÈîôËØØÂàÜÊûê",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 13,
      "panels": [],
      "title": "ÈóÆÈ¢òÊé•Âè£ÂàÜÊûê",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "uri"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Êé•Âè£Ë∑ØÂæÑ"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Êü•ÁúãËØ•Êé•Âè£ÈîôËØØÂàÜÊûê",
                    "url": "/d/nginx-interface-error-analysis?var-uri=${__value.raw}&var-business_unit=${business_unit}&var-environment=${environment}&${__url_time_range}",
                    "targetBlank": true
                  },
                  {
                    "title": "Êü•ÁúãËØ•Êé•Âè£ÊÄßËÉΩÂàÜÊûê",
                    "url": "/d/nginx_api_performance_analysis?var-uri=${__value.raw}&var-business_unit=${business_unit}&var-environment=${environment}&${__url_time_range}",
                    "targetBlank": true
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "status_code"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Áä∂ÊÄÅÁ†Å"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÊ¨°Êï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_response_time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Âπ≥ÂùáÂìçÂ∫îÊó∂Èó¥(ms)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "top_client_ips"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "TOP5ÂÆ¢Êà∑Á´ØIP"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "platform"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Âπ≥Âè∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_description"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÊèèËø∞"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 31
      },
      "id": 14,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": ""
          }
        ]
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "table",
          "refId": "A",
          "rawSql": "SELECT\n                                request_uri_normalized as uri,\n                                response_status_code as status_code,\n                                count() as error_count,\n                                avg(total_request_duration) as avg_response_time,\n                                groupUniqArray(5)(client_ip) as top_client_ips,\n                                any(platform) as platform,\n                                CASE\n                                    WHEN response_status_code = '404' THEN 'Not Found'\n                                    WHEN response_status_code = '403' THEN 'Forbidden'\n                                    WHEN response_status_code = '401' THEN 'Unauthorized'\n                                    WHEN response_status_code = '400' THEN 'Bad Request'\n                                    WHEN response_status_code = '500' THEN 'Internal Server Error'\n                                    WHEN response_status_code = '502' THEN 'Bad Gateway'\n                                    WHEN response_status_code = '503' THEN 'Service Unavailable'\n                                    WHEN response_status_code = '504' THEN 'Gateway Timeout'\n                                    ELSE 'Other Error'\n                                END as error_description\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY request_uri_normalized, response_status_code\n                            HAVING count() > 5\n                            ORDER BY error_count DESC\n                            LIMIT 20"
        }
      ],
      "title": "È´òÈîôËØØÊé•Âè£ËØ¶ÊÉÖ",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "ip_address"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "IPÂú∞ÂùÄ"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Êü•ÁúãËØ•IPÊù•Ê∫êÂàÜÊûê",
                    "url": "/d/nginx-ip-analysis?var-client_ip=${__value.raw}&var-business_unit=${business_unit}&var-environment=${environment}&${__url_time_range}",
                    "targetBlank": true
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_requests"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÊÄªËØ∑Ê±ÇÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_rate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÁéá(%)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "unique_endpoints"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ËÆøÈóÆÊé•Âè£Êï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "status_samples"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Áä∂ÊÄÅÁ†ÅÊ†∑Êú¨"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "risk_score"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "È£éÈô©ËØÑÂàÜ"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "risk_level"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "È£éÈô©Á≠âÁ∫ß"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 31
      },
      "id": 15,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": ""
          }
        ]
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "table",
          "refId": "A",
          "rawSql": "SELECT\n                                client_ip as ip_address,\n                                count() as total_requests,\n                                countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) as error_count,\n                                (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) as error_rate,\n                                uniq(request_uri_normalized) as unique_endpoints,\n                                arraySlice(groupArray(response_status_code), 1, 5) as status_samples,\n                                (countIf(response_status_code >= '400') * 1 +\n                                 if(count() > 1000, 2, 0) +\n                                 if((countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) > 20, 3, 0) +\n                                 if(countIf(response_status_code >= '500') > 0, 2, 0)) as risk_score,\n                                CASE\n                                    WHEN countIf(response_status_code >= '500') > 10 OR (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) > 50 THEN 'High Risk'\n                                    WHEN countIf(response_status_code >= '400') > 20 OR count() > 1000 THEN 'Medium Risk'\n                                    ELSE 'Low Risk'\n                                END as risk_level\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time)\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY client_ip\n                            HAVING countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) > 10\n                            ORDER BY risk_score DESC\n                            LIMIT 15"
        }
      ],
      "title": "ÂºÇÂ∏∏IPÂàÜÊûê",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 16,
      "panels": [],
      "title": "ÊúçÂä°ÂàÜÁ±ªÂàÜÊûê",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "api_category"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "APIÁ±ªÂà´"
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "Êü•ÁúãËØ•APIÁ±ªÂà´ÊÄßËÉΩÂàÜÊûê",
                    "url": "/d/nginx_api_performance_analysis?var-api_category=${__value.raw}&var-business_unit=${business_unit}&var-environment=${environment}&${__url_time_range}",
                    "targetBlank": true
                  },
                  {
                    "title": "Êü•ÁúãËØ•APIÁ±ªÂà´ÊúçÂä°ÂàÜÊûê",
                    "url": "/d/nginx-service-level-analysis?var-api_category=${__value.raw}&var-business_unit=${business_unit}&var-environment=${environment}&${__url_time_range}",
                    "targetBlank": true
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_requests"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÊÄªËØ∑Ê±ÇÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error_rate"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÈîôËØØÁéá(%)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "server_errors"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "5XXÈîôËØØ"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "client_errors"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "4XXÈîôËØØ"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "unique_ips"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Áã¨Á´ãIPÊï∞"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "health_status"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ÂÅ•Â∫∑Áä∂ÊÄÅ"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 41
      },
      "id": 17,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": ""
          }
        ]
      },
      "pluginVersion": "9.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "table",
          "refId": "A",
          "rawSql": "SELECT\n                                api_category,\n                                count() as total_requests,\n                                countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) as error_count,\n                                (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) as error_rate,\n                                countIf(response_status_code >= '500') as server_errors,\n                                countIf(response_status_code >= '400' AND response_status_code < '500') as client_errors,\n                                uniq(client_ip) as unique_ips,\n                                CASE\n                                    WHEN (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) > 10 AND count() > 1000 THEN 'Critical'\n                                    WHEN (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) > 5 OR countIf(response_status_code >= '500') > 50 THEN 'Warning'\n                                    ELSE 'Normal'\n                                END as health_status\n                            FROM nginx_analytics.dwd_nginx_enriched_v3\n                            WHERE $__timeFilter(log_time) AND length(api_category) > 0\n                                AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                            GROUP BY api_category\n                            ORDER BY error_rate DESC"
        }
      ],
      "title": "APIÁ±ªÂà´ÈîôËØØÁªüËÆ°",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "${DS_CLICKHOUSE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 41
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "${DS_CLICKHOUSE}"
          },
          "queryType": "timeseries",
          "refId": "A",
          "rawSql": "SELECT\n                                    toStartOfInterval(log_time, toIntervalSecond($__interval_s)) as time,\n                                    api_category,\n                                    (countIf(response_status_code NOT IN ('200', '201', '202', '204', '301', '302', '304')) * 100.0 / count()) as error_rate\n                                FROM nginx_analytics.dwd_nginx_enriched_v3\n                                WHERE $__timeFilter(log_time) AND length(api_category) > 0\n                                    AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)\n                                    AND $__conditionalAll(environment IN (${environment:singlequote}), $environment)\n                                    AND $__conditionalAll(response_status_code IN (${status_code:singlequote}), $status_code)\n                                GROUP BY time, api_category\n                                HAVING count() > 10\n                                ORDER BY time, api_category"
        }
      ],
      "title": "APIÁ±ªÂà´ÈîôËØØÁéáË∂ãÂäø",
      "type": "timeseries"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [
    "nginx",
    "response_status_code",
    "error",
    "monitoring"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "ClickHouse",
          "value": "ClickHouse"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Êï∞ÊçÆÊ∫ê",
        "multi": false,
        "name": "DS_CLICKHOUSE",
        "options": [],
        "query": "grafana-clickhouse-datasource",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_CLICKHOUSE}"
        },
        "definition": "SELECT DISTINCT business_unit FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE business_unit IS NOT NULL AND business_unit != ''",
        "includeAll": true,
        "label": "‰∏öÂä°Á≥ªÁªü",
        "multi": true,
        "name": "business_unit",
        "options": [],
        "query": "SELECT DISTINCT business_unit FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE business_unit IS NOT NULL AND business_unit != ''",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "query"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_CLICKHOUSE}"
        },
        "definition": "SELECT DISTINCT environment FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE environment IS NOT NULL AND environment != '' AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)",
        "includeAll": true,
        "label": "ÁéØÂ¢É",
        "multi": true,
        "name": "environment",
        "options": [],
        "query": "SELECT DISTINCT environment FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE environment IS NOT NULL AND environment != '' AND $__conditionalAll(business_unit IN (${business_unit:singlequote}), $business_unit)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "type": "query"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "${DS_CLICKHOUSE}"
        },
        "definition": "SELECT DISTINCT response_status_code FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE response_status_code IS NOT NULL AND response_status_code != ''",
        "includeAll": true,
        "label": "Áä∂ÊÄÅÁ†Å",
        "multi": true,
        "name": "status_code",
        "options": [],
        "query": "SELECT DISTINCT response_status_code FROM nginx_analytics.dwd_nginx_enriched_v3 WHERE response_status_code IS NOT NULL AND response_status_code != ''",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Áä∂ÊÄÅÁ†ÅÁªüËÆ°ÂàÜÊûê",
  "uid": "nginx-status-code-analysis",
  "version": 1,
  "weekStart": ""
}